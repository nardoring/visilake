* Visilake

This is the mono repo for the visilake application. We deploy the AWS infra, the web-app docker container, and the rust processing jobs here.

The easiest way to deploy the visilake application is by using the =nix= package manager along with our deploy script.

[[file:flake.nix][flake.nix]] provides the all the project's dependencies, builds the nodejs application, packages the nodejs application in a docker container, pulls the [[https://www.localstack.cloud/][Localstack]]-pro docker image, and sets the necessary environment variables to deploy the test environment.

We provide comprehensive instructions for a windows deployment through =WSL2= in our [[https://github.com/nardoring/devenv][devenv]] repository.

** Deployment

[[file:./infra/deploy-tf.sh]] simplifies multiple aspects of the deploy process

From the project root on a linux machine:

#+begin_src shell
chmod +x ./infra/deploy-tf.sh
./infra/deploy-tf.sh
#+end_src

If you'd like to deploy the project with our supplied mockdata:

#+begin_src shell
./infra/deploy-tf.sh --init
#+end_src

This will setup the [[https://github.com/nardoring/mockdata][mockdata]] for you. For all options see the usage below:

#+begin_src shell
Usage: ./infra/deploy-tf.sh [options]

Options:
  none                   Full Localstack and Terraform Deployment
  -v, --verbose          Enable debug for Terraform and Localstack
  -i, --init             Initiate the git submodule for the datalake and mock data
  -w, --warmup           Warmup Athena and download bigdata docker image
  -r, --redeploy         Re-deploy Terraform config to Localstack
  -d, --docker           Re-deploy the visilake docker image to Localstack
  -t, --teardown [mode]  Perform teardown.
                         Modes: 'h' or 'hard' for hard teardown, no mode for standard teardown
                                 hard teardown will remove all docker images on your system
  -h, --help             Display this help message

Note:
  -r -d Localstack must already be running by running './infra/deploy-tf.sh' first
#+end_src

The web app will be deployed to [[http://localhost:45139]]

For an outline of the current AWS services used see the [[file:./infra/README.org][infrastructure readme]].

** Stopping the deployed services

To stop the localstack docker containers and any additional containers it has spawned we have a stop script:

#+begin_src shell
./infra/deploy-tf.sh --teardown
#+end_src

It is wise to prune any unneeded images afterwards. If you do not have other docker containers you'd like to maintain you can simply run the following commands:

#+begin_src shell
./infra/deploy-tf.sh --teardown hard
#+end_src

* Visiproc
To run the rust processing jobs first cd into the visiproc directory

#+begin_src shell
cd visiproc
#+end_src

Next just run the app with cargo

#+begin_src shell
cargo run
#+end_src

After the application is done compiling and building, you can run commands we've created for both debugging and running the processing

#+begin_src shell
Usage: <COMMAND>

Commands:
  list-topics          List topics from AWS SNS
  list-queues          List queues from AWS SQS
  list-s3              List buckets and objects from AWS s3
  list-messages        List messages from AWS SQS
  process-queued-jobs  Process queued jobs
  test-parquet         Injest parquet and display it
  delete-queues        Deletes old update topic queues
  exit                 Exits the REPL
  help                 Print this message or the help of the given subcommand(s)
#+end_src

Ideally Visiproc would be containerized in the same way Visilake is and deployed to an EC2 instance, though this is future work.

* Prerequisites
This section is only for non-=nix= based deployments.

Note that we not longer provide a =Dockerfile= or =docker-compose.yml= for this project, but one can be found on an older branch. We do not currently support this method.

- [[https://www.docker.com/][Docker]]
- [[https://docs.docker.com/get-started/08_using_compose/][Docker Compose]]
- [[https://localstack.cloud][Localstack]]
- [[https://docs.aws.amazon.com/cli/v1/userguide/cli-chap-install.html][awscli v1]] (do not use v2)
- [[https://github.com/localstack/awscli-local][awscli-local]]
